<% layout("/layouts/basic.ejs") -%>

<div class="row mt-3">
    <h1 class="col-md-6 offset-md-3">Sign Up</h1>
    <div class="col-md-6 offset-md-3">
        <form action="/register" method="post" class="needs-validation" novalidate id="registerForm">
            <!-- Name Fields (unchanged) -->
            <div class="row">
                <div class="col-md-4 mb-3">
                    <label for="firstName" class="form-label">First Name*</label>
                    <input 
                        name="firstName"
                        id="firstName"
                        type="text"
                        class="form-control"
                        required
                        minlength="2"
                        maxlength="50">
                </div>
                <div class="col-md-4 mb-3">
                    <label for="middleName" class="form-label">Middle Name</label>
                    <input 
                        name="middleName"
                        id="middleName"
                        type="text"
                        class="form-control"
                        maxlength="50">
                </div>
                <div class="col-md-4 mb-3">
                    <label for="lastName" class="form-label">Last Name*</label>
                    <input 
                        name="lastName"
                        id="lastName"
                        type="text"
                        class="form-control"
                        required
                        minlength="2"
                        maxlength="50">
                </div>
            </div>

            <!-- Phone Number -->
            <div class="mb-3">
                <label for="phoneNumber" class="form-label">Phone Number*</label>
                <div class="input-group">
                    <span class="input-group-text">+91</span>
                    <input 
                        name="phoneNumber"
                        id="phoneNumber"
                        type="tel"
                        class="form-control"
                        required
                        pattern="[0-9]{10}"
                        title="Please enter exactly 10 digits"
                        placeholder="XXXXXXXXXX"
                        maxlength="10"
                        oninput="this.value = this.value.replace(/[^0-9]/g, '')">
                </div>
                <div class="form-text">Indian number (+91) with 10 digits</div>
            </div>

            <!-- Email -->
            <div class="mb-3">
                <label for="email" class="form-label">Email*</label>
                <input 
                    name="email"
                    id="email"
                    type="email"
                    class="form-control"
                    required>
            </div>

            <!-- Username -->
            <div class="mb-3">
                <label for="username" class="form-label">Username*</label>
                <input 
                    name="username"
                    id="username"
                    type="text"
                    class="form-control"
                    required
                    minlength="4"
                    maxlength="20"
                    pattern="[a-zA-Z0-9]+"
                    title="Only letters and numbers, no spaces">
                <div class="form-text">4-20 characters, letters and numbers only</div>
            </div>

            <!-- Password Fields -->
            <div class="mb-3">
                <label for="password" class="form-label">Password*</label>
                <input 
                    name="password"
                    id="password"
                    type="password"
                    class="form-control"
                    required
                    minlength="8"
                    pattern="^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$"
                    title="Must contain at least one uppercase, one lowercase, one number and one special character">
                <div class="form-text">Minimum 8 characters with at least one uppercase, one lowercase, one number, and one special character</div>
                <div class="password-strength mt-2">
                    <div class="progress">
                        <div class="progress-bar" id="passwordStrength" role="progressbar" style="width: 0%"></div>
                    </div>
                    <small id="passwordFeedback" class="form-text"></small>
                </div>
            </div>

            <div class="mb-3">
                <label for="confirmPassword" class="form-label">Confirm Password*</label>
                <input 
                    name="confirmPassword"
                    id="confirmPassword"
                    type="password"
                    class="form-control"
                    required
                    minlength="8">
                <div id="passwordMatchFeedback" class="invalid-feedback">Passwords must match</div>
            </div>

            <button type="submit" class="btn btn-primary">Register</button>
            <p class="mt-3">Already have an account? <a href="/login">Login here</a></p>
        </form>
    </div>
</div>

<script>
    // Password strength indicator
    document.getElementById('password').addEventListener('input', function() {
        const password = this.value;
        const strengthBar = document.getElementById('passwordStrength');
        const feedback = document.getElementById('passwordFeedback');
        
        // Strength calculation
        let strength = 0;
        if (password.length >= 8) strength += 25;
        if (/[A-Z]/.test(password)) strength += 25;
        if (/[0-9]/.test(password)) strength += 25;
        if (/[^A-Za-z0-9]/.test(password)) strength += 25;
        
        strengthBar.style.width = strength + '%';
        
        // Visual feedback
        if (strength < 50) {
            strengthBar.className = 'progress-bar bg-danger';
            feedback.textContent = 'Weak password';
        } else if (strength < 75) {
            strengthBar.className = 'progress-bar bg-warning';
            feedback.textContent = 'Moderate password';
        } else {
            strengthBar.className = 'progress-bar bg-success';
            feedback.textContent = 'Strong password';
        }
    });

    // Password match validation
    document.getElementById('confirmPassword').addEventListener('input', function() {
        const password = document.getElementById('password').value;
        const confirmPassword = this.value;
        const feedback = document.getElementById('passwordMatchFeedback');
        
        if (password !== confirmPassword && confirmPassword.length > 0) {
            this.classList.add('is-invalid');
            feedback.style.display = 'block';
        } else {
            this.classList.remove('is-invalid');
            feedback.style.display = 'none';
        }
    });

    // Form submission validation
    document.getElementById('registerForm').addEventListener('submit', function(e) {
        const password = document.getElementById('password').value;
        const confirmPassword = document.getElementById('confirmPassword').value;
        
        if (password !== confirmPassword) {
            e.preventDefault();
            document.getElementById('confirmPassword').classList.add('is-invalid');
            document.getElementById('passwordMatchFeedback').style.display = 'block';
            alert('Passwords do not match!');
        }
    });
</script>

<style>
    .password-strength {
        margin-top: 5px;
    }
    .progress {
        height: 5px;
        margin-bottom: 5px;
    }
    #passwordMatchFeedback {
        display: none;
    }
</style>